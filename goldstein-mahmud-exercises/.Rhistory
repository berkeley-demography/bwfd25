library(data.table)
source("utility_functions.R")
source("tempo_functions.R")
dt <- fread("asfrRR.txt")
dt <- dt[Code == "USA"] ## restrict to USA
fat_all <- dt[, xtabs(ASFR ~ Age + Year)] ## create the matrix
tfr <- colSums(fat_all)
plot(names(tfr), tfr, ylim = c(1, 4), xlab = "Period", ylab = "TFR")
abline(v = 2008, lty = 2)
grid()
title("USA Period Total Fertility, since 1933")
## recreate smaller matrix
fat <- dt[Year >= 2008 & Age %in% 16:42, xtabs(ASFR ~ Age + Year)]
tfr <- colSums(fat)
year <- as.numeric(colnames(fat))
plot(year, tfr, lty = 1, type = 'o', ylim = c(1.5,2.5),
xlab = "Period", ylab = "TFR")
grid()
title("USA Period Total Fertility, since 2008")
par(mfrow = c(1,1))
my_ages = paste(seq(18, 42, 6))
matplot(colnames(fat), t(fat[my_ages,]), type = 'l',
ylab = "ASFR",
xlab = "Period",
main = "Age-specific fertility over time")
text(colnames(fat)[10], fat[my_ages,10], my_ages, col = 1:5)
my_periods = paste(seq(2008, 2023, 7))
matplot(rownames(fat), fat[,my_periods], type = 'l',
lty = 1:3,
col = "black",
ylab = "ASFR",
xlab = "Age",
main = "Age-specific fertility schedules over time")
text(rownames(fat)[10], fat[10, my_periods], my_periods)
mt <- apply(fat, 2, get.mean)
plot(names(mt), mt, type = 'o',
ylim = c(25, 30), xlab = "Period", ylab = "Mean age")
title("Period mean ages over time")
grid()
mt.prime <- rt <- center.diff(mt, end.fill = TRUE)
plot(names(mt.prime), mt.prime, type = "p",
ylim = c(0,.3), xlab = "Period", ylab = "Change in mean age")
title("Time derivative mean age")
grid()
mu_p = mt ## period mean
mu_p_prime = rt ## time derivative of period mean
ctfr_hat = tfr * (1 + mu_p_prime) ## ryder-esque formula
## corresponding cohorts
t <- as.numeric(colnames(fat))
cohorts <- t - mu_p
names(ctfr_hat) <- cohorts
plot(names(ctfr_hat), ctfr_hat, xlab = "Cohort",
ylab = "Estimated CTFR", type = 'o',
ylim = c(1.5, 2.5)) ## note: same ylim as with period before
grid()
coh_to_per_ratio <- ctfr_hat/tfr
names(coh_to_per_ratio) <- names(tfr)
print(round(coh_to_per_ratio,2))
## Extrapolation
N <- 10 ## number of years we are extrapolating for
n_periods = ncol(fat)
bx <- ( fat[,n_periods] - fat[,n_periods - 5] ) / 5 ## rate of change calculated from most recent five years
fat_forward = fat[,n_periods] + cbind(bx) %*% rbind(1:N) ## extrapolate based on this rate of change staying constant in the future for N years
colnames(fat_forward) <- paste(max(as.numeric(colnames(fat))) + 1:N)
## now combine observed (form distant past) and extrapolation
fat_extended = cbind(fat_all[rownames(fat),], fat_forward)
matplot(colnames(fat), t(fat), type='l', xlim = c(2008, 2035), xlab = "Period",
ylab = "ASFR", lty = 1)
matlines(colnames(fat_extended), t(fat_extended), lty = 2)
title("Linear Extrapolation of Period Age-Specific Fertility Rates")
## transform to a cohort matrix
fac_extended <- per2coh(fat_extended)
fac_extended <- remove.na.columns(fac_extended)
## compute CTFR of observed and extrapolated rates
ctfr_obs = colSums(fac_extended)
## compare "observed" and "translated"
plot(names(ctfr_obs), ctfr_obs, lty = 1, type = 'l',
ylim = c(1, 3), lwd = 2,
xlim = c(1970, 2000),
xlab = "Cohort",
ylab = "CTFR",
main = "Cohort total fertility")
points(cohorts, ctfr_hat, lty = 2, cex = .6)
grid()
## we can also compare this to the "uninflated" period tfr
points(cohorts, colSums(fat), cex = .6, col = 'red')
legend("topright", c("obs CTFR",
"translated CTFR",
"PTFR"),
lwd = c(2, -1, -1),
cex = .6,
pch = c(-1,1,1),
col = c("black", "black", "red"),
bty = "n")
tfr_adj = tfr / (1 - rt)
t = names(tfr)
plot(t, tfr, type = 'l', ylim = c(1.5, 2.5))
lines(t, tfr_adj, lty = 2)
legend("topright", c("tfr", "tfr_adj"),
lty = 1:2)
grid()
get_fat_bf <- function(qt, f0, Rt)
{
## period-shift estimated fertility surface f(a,t) from parameters
## -- shifts all ages of period at once
## -- indices without names
## get rt (time derivative of Rt)
rt = center.diff(Rt, end.fill = T)
## initialize empty period matrix
fat_hat <- matrix(NA, nrow(fat), ncol(fat))
dimnames(fat_hat) <- dimnames(fat)
a <- as.numeric(names(f0))
## fill up empty matrix with shifted f0`
for (i in 1:ncol(fat)) ## each cohort
{
## rule 2, just extrapolates edge values
## a problem if ages start late or end early
this_shifted_fat <-
approx(x = a, y = f0,
xout = a - Rt[i], rule = 2)$y
fat_hat[,i] <- this_shifted_fat * (1 - rt[i])
}
## multiply by qt (using diag trick)
fat_hat <- fat_hat %*% diag(qt)
## return fat_hat
return(fat_hat)
}
ob_fun_f0_qt_Rt <- function(p)
{
## objective function for cohort shift model
## get latest version of parameters
n_a <- length(f0_start)
n_t <- length(qt_start)
f0 = exp(p[1:n_a])
f0 <- f0/sum(f0) ## normalize
qt = exp(p[(n_a + 1):(n_a + n_t)])
Rt = p[(n_a + n_t + 1):length(p)]
names(Rt) <- names(Rt_start)
names(f0) <- names(f0_start)
names(qt) <- names(qt_start)
## get the f(a,t) implied by these parameters
fat_hat = get_fat_bf(qt, f0, Rt) ## implied period shift f(a,t)
dimnames(fat_hat) <- dimnames(fat)
## define loss  and return it (to optimizer)
loss = sum((fat-fat_hat)^2) ## sum of squared errors
return(loss)
}
## starting values
## -- f0
f0_start <- rowMeans(fat)
f0_start = f0_start/sum(f0_start) ## normalized
## -- qt
tfr <- colSums(fat)
qt_start <- tfr
## -- Rt
mu_t <- apply(fat, 2, get.mean)
Rt_start <- mu_t - mean(mu_t)
## optimizer (this takes a while!)
p_start = c(log(f0_start), log(qt_start), Rt_start)
fit = nlm(p = p_start,
f = ob_fun_f0_qt_Rt, print.level = 1,
iterlim = 1000)
fit_bf = fit
## plot estimates
plot(fit$est,
xlab = "Index in Parameter Vector",
ylab = "Parameter Value")
abline(v = cumsum(c(1, length(f0_start),
length(qt_start),
length(Rt_start))),
lty = 2
)
fit = fit_bf
f0_hat = exp(fit$est[1:length(f0_start)])
qt_hat = exp(fit$est[(length(f0_start) + 1):(length(f0_start) + length(qt_start))])
qt_hat_bf = qt_hat
Rt_hat = fit$est[(length(f0_start) + length(qt_start) + 1):length(fit$est)]
## normalize
f0_hat = f0_hat/sum(f0_hat)
names(f0_hat) <- names(f0_start)
names(qt_hat) <- names(qt_start)
names(Rt_hat) <- names(Rt_start)
fat_hat = get_fat_bf(qt = qt_hat, f0 = f0_hat, Rt = Rt_hat)
colnames(fat_hat) <- colnames(fat)
a <- rownames(fat)
par(mfrow = c(2,2))
plot(a, fat[,"2010"], cex = .6, pch = 19)
lines(a, fat_hat[,"2010"], lty = 2)
title("2010")
##
plot(a, fat[,"2016"], col = 2, , cex = .6, pch = 19)
lines(a, fat_hat[,"2016"], lty = 2, col = 2)
title("2016")
##
plot(a, fat[,"2022"], col = 3, cex = .6, pch = 19)
lines(a, fat_hat[,"2022"], lty = 2, col = 3)
title("2022")
##
my_periods = paste(c("2010", "2016", "2022"))
matplot(a, fat[, my_periods], lty = 1, type = 'p', pch = 10, cex = .6)
matlines(a, fat_hat[, my_periods], lty = 2)
title("All three periods")
par(mfrow = c(1,1))
plot(t, tfr, ylim = c(1, 3), xlab = "Year", ylab = "TFR")
lines(t, tfr_adj, lty = 2)
lines(t, qt_hat_bf, lty = 2, col = 'red')
legend("topright",
c("observed tfr", "adj tfr (bongaarts-feeney)",
"adj tfr (optimization)"),
col = c("black", "black", "red"),
lty = c(-1, 2, 2),
pch = c(1,-1,-1),)
get_fat_gc <- function(qt, f0, Sc)
{
## cohort-shift estimated fertility surface f(a,t) from parameters
## -- shifts all ages of cohort at once
## -- indices without names
## -- converts back to period
## initialize empty cohort matrix
fac_hat <- matrix(NA, nrow(fac), ncol(fac))
dimnames(fac_hat) <- dimnames(fac)
a <- as.numeric(names(f0))
## fill up empty matrix with shifted f0
for (i in 1:ncol(fac)) ## each cohort
{
## rule 2, just extrapolates edge values
## a problem if ages start late or end early
this_shifted_fac <-
approx(x = a, y = f0,
xout = a - Sc[i], rule = 2)$y
fac_hat[,i] <- this_shifted_fac
}
## convert to period
fat_hat <- coh2per(fac_hat)
fat_hat <- fat_hat[, colnames(fat)] ## keep period range
## multiply by qt (using diag trick)
fat_hat <- fat_hat %*% diag(qt)
## return fat_hat
return(fat_hat)
}
ob_fun_f0_qt_Sc <- function(p)
{
## objective function for cohort shift model
## get latest version of parameters
n_a <- length(f0_start)
n_t <- length(qt_start)
f0 = exp(p[1:n_a])
f0 <- f0/sum(f0) ## normalize
qt = exp(p[(n_a + 1):(n_a + n_t)])
Sc = p[(n_a + n_t + 1):length(p)]
names(Sc) <- names(Sc_start)
names(f0) <- names(f0_start)
names(qt) <- names(qt_start)
## get the f(a,t) implied by these parameters
fat_hat = get_fat_gc(qt, f0, Sc) ## implied cohort shift f(a,t)
dimnames(fat_hat) <- dimnames(fat)
## define loss  and return it (to optimizer)
loss = sum((fat-fat_hat)^2) ## sum of squared errors
return(loss)
}
fac <- per2coh(fat)
fac <- remove.na.columns(fac)
## starting values
## -- f0
f0_start <- rowMeans(fat)
f0_start = f0_start/sum(f0_start) ## normalized
## -- qt
tfr <- colSums(fat)
qt_start <- tfr
## -- Sc from Rt
mu_t <- apply(fat, 2, get.mean)
Rt <- mu_t - mean(mu_t)
#plot(Rt)
Sc_start <- approx(x = names(Rt),
y = Rt,
xout = as.numeric(colnames(fac)) + 30,
rule = 2)$y
names(Sc_start) <- colnames(fac)
## optimizer (this takes a while!)
p_start = c(log(f0_start), log(qt_start), Sc_start)
if(!exists("gc_fit"))
{
fit = nlm(p = p_start,
f = ob_fun_f0_qt_Sc, print.level = 1,
iterlim = 1000)
gc_fit = fit
}
